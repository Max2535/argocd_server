#!/bin/bash

# =============================================================================
# ЁЯФР р╣Ар╕Вр╣Йр╕▓р╕Цр╕╢р╕З ArgoCD р╕Ьр╣Ир╕▓р╕Щ HTTPS р╣Вр╕Фр╕вр╕Хр╕гр╕З
# =============================================================================

# р╕кр╕╡р╕кр╕│р╕лр╕гр╕▒р╕Ър╣Бр╕кр╕Фр╕Зр╕Ьр╕е
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

log() { echo -e "${GREEN}[INFO]${NC} $1"; }
warn() { echo -e "${YELLOW}[WARN]${NC} $1"; }
error() { echo -e "${RED}[ERROR]${NC} $1"; }
info() { echo -e "${BLUE}[INFO]${NC} $1"; }

echo "ЁЯФР р╣Ар╕Вр╣Йр╕▓р╕Цр╕╢р╕З ArgoCD р╕Ьр╣Ир╕▓р╕Щ HTTPS р╣Вр╕Фр╕вр╕Хр╕гр╕З"
echo "=================================="

# р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓р╕бр╕╡ kubectl р╕лр╕гр╕╖р╕нр╣Др╕бр╣И
if ! command -v kubectl >/dev/null 2>&1; then
    error "kubectl р╣Др╕бр╣Ир╣Др╕Фр╣Йр╕Хр╕┤р╕Фр╕Хр╕▒р╣Йр╕З р╕Бр╕гр╕╕р╕Ур╕▓р╕Хр╕┤р╕Фр╕Хр╕▒р╣Йр╕Зр╕Бр╣Ир╕нр╕Щр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ"
    exit 1
fi

# р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓ ArgoCD р╕Чр╕│р╕Зр╕▓р╕Щр╕нр╕вр╕╣р╣Ир╕лр╕гр╕╖р╕нр╣Др╕бр╣И
log "р╕Бр╕│р╕ер╕▒р╕Зр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕кр╕Цр╕▓р╕Щр╕░ ArgoCD..."
if ! kubectl get namespace argocd >/dev/null 2>&1; then
    error "р╣Др╕бр╣Ир╕Юр╕Ъ namespace argocd р╕Бр╕гр╕╕р╕Ур╕▓р╕Хр╕┤р╕Фр╕Хр╕▒р╣Йр╕З ArgoCD р╕Бр╣Ир╕нр╕Щ"
    exit 1
fi

# р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ pod р╕Вр╕нр╕З ArgoCD Server
if ! kubectl get pods -n argocd -l app.kubernetes.io/name=argocd-server 2>/dev/null | grep -q Running; then
    error "ArgoCD Server р╣Др╕бр╣Ир╣Др╕Фр╣Йр╕Чр╕│р╕Зр╕▓р╕Щ р╕Бр╕гр╕╕р╕Ур╕▓р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕кр╕Цр╕▓р╕Щр╕░ pod"
    echo "kubectl get pods -n argocd"
    exit 1
else
    log "тЬЕ ArgoCD Server р╕Бр╕│р╕ер╕▒р╕Зр╕Чр╕│р╕Зр╕▓р╕Щ"
fi

# 1. р╕вр╕Бр╣Ар╕ер╕┤р╕Б port forwarding р╣Ар╕Фр╕┤р╕б (р╕Цр╣Йр╕▓р╕бр╕╡)
log "1. р╕Бр╕│р╕ер╕▒р╕Зр╕вр╕Бр╣Ар╕ер╕┤р╕Б port forwarding р╣Ар╕Фр╕┤р╕б..."
pkill -f "kubectl.*port-forward.*argocd-server" 2>/dev/null || true
sleep 3

# 2. р╕Др╣Йр╕Щр╕лр╕▓ port р╕Чр╕╡р╣Ир╕зр╣Ир╕▓р╕З
log "2. р╕Бр╕│р╕ер╕▒р╕Зр╕Др╣Йр╕Щр╕лр╕▓ port р╕Чр╕╡р╣Ир╕зр╣Ир╕▓р╕З..."
PREFERRED_PORTS=(8443 8080 8081 8082 8083 8090)
PORT_FOUND=false

for port in "${PREFERRED_PORTS[@]}"; do
    if ! netstat -tuln | grep -q ":$port "; then
        free_port=$port
        PORT_FOUND=true
        log "тЬЕ р╕Юр╕Ъ port р╕Чр╕╡р╣Ир╕зр╣Ир╕▓р╕З: $free_port"
        break
    fi
done

if [ "$PORT_FOUND" = false ]; then
    warn "тЪая╕П р╣Др╕бр╣Ир╕Юр╕Ъ port р╕Чр╕╡р╣Ир╕зр╣Ир╕▓р╕З р╕Бр╕│р╕ер╕▒р╕Зр╣Гр╕Кр╣Й port 9090 р╣Бр╕Чр╕Щ"
    free_port=9090
fi

# 3. р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓ port р╕Чр╕╡р╣Ир╣Ар╕ер╕╖р╕нр╕Бр╕зр╣Ир╕▓р╕Зр╕лр╕гр╕╖р╕нр╣Др╕бр╣И
log "3. р╕Бр╕│р╕ер╕▒р╕Зр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓ port $free_port р╕зр╣Ир╕▓р╕Зр╕лр╕гр╕╖р╕нр╣Др╕бр╣И..."
if netstat -tuln | grep -q ":$free_port "; then
    warn "тЪая╕П Port $free_port р╕бр╕╡р╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╕нр╕вр╕╣р╣И"
    warn "р╕Бр╕│р╕ер╕▒р╕Зр╕Юр╕вр╕▓р╕вр╕▓р╕бр╕вр╕Бр╣Ар╕ер╕┤р╕Бр╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ port $free_port..."
    
    # р╕Юр╕вр╕▓р╕вр╕▓р╕бр╕лр╕▓ process р╕Чр╕╡р╣Ир╣Гр╕Кр╣Й port
    pid=$(lsof -t -i:$free_port 2>/dev/null)
    if [ -n "$pid" ]; then
        warn "р╕Юр╕Ъ process ID: $pid р╕Бр╕│р╕ер╕▒р╕Зр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ port $free_port"
        warn "р╕Бр╕│р╕ер╕▒р╕Зр╕Юр╕вр╕▓р╕вр╕▓р╕бр╕вр╕Бр╣Ар╕ер╕┤р╕Б process..."
        kill $pid 2>/dev/null || true
        sleep 2
    fi
fi

# 4. р╣Ар╕гр╕┤р╣Ир╕б port forwarding
log "4. р╕Бр╕│р╕ер╕▒р╕Зр╣Ар╕гр╕┤р╣Ир╕б port forwarding р╕Ър╕Щ port $free_port..."
kubectl port-forward svc/argocd-server -n argocd $free_port:443 --address 0.0.0.0 > /dev/null 2>&1 &
port_forward_pid=$!
echo $port_forward_pid > .argocd-https-pid
log "тЬЕ р╣Ар╕гр╕┤р╣Ир╕б port forwarding р╕Ър╕Щ port $free_port р╣Бр╕ер╣Йр╕з (PID: $port_forward_pid)"
sleep 5

# 5. р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓ port forwarding р╕Чр╕│р╕Зр╕▓р╕Щр╕лр╕гр╕╖р╕нр╣Др╕бр╣И
log "5. р╕Бр╕│р╕ер╕▒р╕Зр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓ port forwarding р╕Чр╕│р╕Зр╕▓р╕Щр╕лр╕гр╕╖р╕нр╣Др╕бр╣И..."
if ps -p $port_forward_pid > /dev/null; then
    log "тЬЕ Port forwarding р╕Чр╕│р╕Зр╕▓р╕Щр╕Ыр╕Бр╕Хр╕┤"
else
    error "тЭМ Port forwarding р╣Др╕бр╣Ир╕Чр╕│р╕Зр╕▓р╕Щ"
    error "р╕Бр╕│р╕ер╕▒р╕Зр╕ер╕нр╕Зр╣Гр╕лр╕бр╣Ир╕нр╕╡р╕Бр╕Др╕гр╕▒р╣Йр╕З..."
    kubectl port-forward svc/argocd-server -n argocd $free_port:443 --address 0.0.0.0 > /dev/null 2>&1 &
    port_forward_pid=$!
    echo $port_forward_pid > .argocd-https-pid
    sleep 5
fi

# 6. р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓р╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Ар╕Вр╣Йр╕▓р╕Цр╕╢р╕З ArgoCD р╣Др╕Фр╣Йр╕лр╕гр╕╖р╕нр╣Др╕бр╣И
log "6. р╕Бр╕│р╕ер╕▒р╕Зр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓р╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Ар╕Вр╣Йр╕▓р╕Цр╕╢р╕З ArgoCD р╣Др╕Фр╣Йр╕лр╕гр╕╖р╕нр╣Др╕бр╣И..."
if curl -k -s https://localhost:$free_port/ | grep -q "ArgoCD\|loading\|<!DOCTYPE html>"; then
    log "тЬЕ р╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Ар╕Вр╣Йр╕▓р╕Цр╕╢р╕З ArgoCD р╣Др╕Фр╣Й"
    echo ""
    echo "ЁЯОЙ р╕Бр╕▓р╕гр╕Хр╕▒р╣Йр╕Зр╕Др╣Ир╕▓р╕кр╕│р╣Ар╕гр╣Зр╕И!"
    echo "ЁЯМР р╣Ар╕Вр╣Йр╕▓р╣Гр╕Кр╣Й ArgoCD р╣Др╕Фр╣Йр╕Чр╕╡р╣И: https://$(hostname -I | awk '{print $1}'):$free_port"
    echo "ЁЯСд Username: admin"
    
    # р╕Юр╕вр╕▓р╕вр╕▓р╕бр╕Фр╕╢р╕Зр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ
    password=$(kubectl -n argocd get secret argocd-initial-admin-password -o jsonpath="{.data.password}" 2>/dev/null | base64 -d)
    if [ -n "$password" ]; then
        echo "ЁЯФС Password: $password"
    else
        echo "ЁЯФС Password: р╕гр╕▒р╕Щ ./get-password.sh р╣Ар╕Юр╕╖р╣Ир╕нр╕Фр╕╣р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ"
    fi
    
    echo ""
    warn "тЪая╕П р╕лр╕бр╕▓р╕вр╣Ар╕лр╕Хр╕╕: р╕Др╕╕р╕Ур╕Ир╕░р╕Хр╣Йр╕нр╕Зр╕вр╕нр╕бр╕гр╕▒р╕Ър╣Гр╕Ър╕гр╕▒р╕Ър╕гр╕нр╕Зр╕Чр╕╡р╣Ир╕ер╕Зр╕Щр╕▓р╕бр╕Фр╣Йр╕зр╕вр╕Хр╕Щр╣Ар╕нр╕З (self-signed certificate) р╣Гр╕Щр╣Ар╕Ър╕гр╕▓р╕зр╣Мр╣Ар╕Лр╕нр╕гр╣М"
    warn "тЪая╕П Port forwarding р╕Чр╕│р╕Зр╕▓р╕Щр╣Гр╕Щр╣Ар╕Ър╕╖р╣Йр╕нр╕Зр╕лр╕ер╕▒р╕Зр╣Бр╕ер╕░р╕Ир╕░р╕лр╕вр╕╕р╕Фр╕Чр╕│р╕Зр╕▓р╕Щр╣Ар╕бр╕╖р╣Ир╕нр╕Др╕╕р╕Ур╕нр╕нр╕Бр╕Ир╕▓р╕Бр╕гр╕░р╕Ър╕Ъ"
    info "тД╣я╕П р╕лр╕▓р╕Бр╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕лр╕вр╕╕р╕Ф port forwarding р╣Гр╕лр╣Йр╕гр╕▒р╕Щр╕Др╕│р╕кр╕▒р╣Ир╕З: kill $(cat .argocd-https-pid)"
else
    warn "тЪая╕П р╕вр╕▒р╕Зр╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Ар╕Вр╣Йр╕▓р╕Цр╕╢р╕З ArgoCD р╣Др╕Фр╣Й"
    warn "р╕нр╕▓р╕Ир╕Хр╣Йр╕нр╕Зр╕гр╕нр╕кр╕▒р╕Бр╕Др╕гр╕╣р╣И р╕лр╕гр╕╖р╕нр╕ер╕нр╕Зр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Фр╣Йр╕зр╕вр╕Др╕│р╕кр╕▒р╣Ир╕З: curl -k -I https://localhost:$free_port/"
fi

# 7. р╕кр╕гр╣Йр╕▓р╕Зр╕кр╕Др╕гр╕┤р╕Ыр╕Хр╣Мр╕кр╕│р╕лр╕гр╕▒р╕Ър╣Ар╕гр╕┤р╣Ир╕б ArgoCD р╣Гр╕Щр╕Др╕гр╕▒р╣Йр╕Зр╕Цр╕▒р╕Фр╣Др╕Ы
log "7. р╕Бр╕│р╕ер╕▒р╕Зр╕кр╕гр╣Йр╕▓р╕Зр╕кр╕Др╕гр╕┤р╕Ыр╕Хр╣Мр╕кр╕│р╕лр╕гр╕▒р╕Ър╣Ар╕гр╕┤р╣Ир╕б ArgoCD р╣Гр╕Щр╕Др╕гр╕▒р╣Йр╕Зр╕Цр╕▒р╕Фр╣Др╕Ы..."
cat > ./start-argocd-https.sh <<EOF
#!/bin/bash
# р╕кр╕Др╕гр╕┤р╕Ыр╕Хр╣Мр╕кр╕│р╕лр╕гр╕▒р╕Ър╣Ар╕гр╕┤р╣Ир╕б ArgoCD HTTPS
echo "ЁЯФД р╕Бр╕│р╕ер╕▒р╕Зр╣Ар╕гр╕┤р╣Ир╕б ArgoCD HTTPS..."
pkill -f "kubectl.*port-forward.*argocd-server" 2>/dev/null || true
sleep 2
kubectl port-forward svc/argocd-server -n argocd $free_port:443 --address 0.0.0.0 > /dev/null 2>&1 &
echo \$! > .argocd-https-pid
echo "тЬЕ р╣Ар╕гр╕┤р╣Ир╕б ArgoCD HTTPS р╕Ър╕Щ port $free_port р╣Бр╕ер╣Йр╕з"
echo "ЁЯМР р╣Ар╕Вр╣Йр╕▓р╣Гр╕Кр╣Й ArgoCD р╣Др╕Фр╣Йр╕Чр╕╡р╣И: https://\$(hostname -I | awk '{print \$1}'):$free_port"
EOF
chmod +x ./start-argocd-https.sh
log "тЬЕ р╕кр╕гр╣Йр╕▓р╕Зр╕кр╕Др╕гр╕┤р╕Ыр╕Хр╣М start-argocd-https.sh р╣Бр╕ер╣Йр╕з"

# 8. р╕кр╕гр╣Йр╕▓р╕Зр╕кр╕Др╕гр╕┤р╕Ыр╕Хр╣Мр╕кр╕│р╕лр╕гр╕▒р╕Ър╕лр╕вр╕╕р╕Ф ArgoCD
log "8. р╕Бр╕│р╕ер╕▒р╕Зр╕кр╕гр╣Йр╕▓р╕Зр╕кр╕Др╕гр╕┤р╕Ыр╕Хр╣Мр╕кр╕│р╕лр╕гр╕▒р╕Ър╕лр╕вр╕╕р╕Ф ArgoCD..."
cat > ./stop-argocd-https.sh <<EOF
#!/bin/bash
# р╕кр╕Др╕гр╕┤р╕Ыр╕Хр╣Мр╕кр╕│р╕лр╕гр╕▒р╕Ър╕лр╕вр╕╕р╕Ф ArgoCD HTTPS
echo "ЁЯЫС р╕Бр╕│р╕ер╕▒р╕Зр╕лр╕вр╕╕р╕Ф ArgoCD HTTPS..."
pkill -f "kubectl.*port-forward.*argocd-server" 2>/dev/null || true
echo "тЬЕ р╕лр╕вр╕╕р╕Ф ArgoCD HTTPS р╣Бр╕ер╣Йр╕з"
EOF
chmod +x ./stop-argocd-https.sh
log "тЬЕ р╕кр╕гр╣Йр╕▓р╕Зр╕кр╕Др╕гр╕┤р╕Ыр╕Хр╣М stop-argocd-https.sh р╣Бр╕ер╣Йр╕з"

# 9. р╣Бр╕кр╕Фр╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╣Ар╕Юр╕┤р╣Ир╕бр╣Ар╕Хр╕┤р╕б
echo ""
echo "тД╣я╕П р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╣Ар╕Юр╕┤р╣Ир╕бр╣Ар╕Хр╕┤р╕б:"
echo "   - р╕кр╕Цр╕▓р╕Щр╕░ Kubernetes: kubectl get pods -n argocd"
echo "   - р╕кр╕Цр╕▓р╕Щр╕░ Port Forwarding: ps aux | grep port-forward"
echo "   - HTTPS Status: curl -k -I https://localhost:$free_port"
echo ""
echo "тЬЕ р╣Ар╕кр╕гр╣Зр╕Ир╕кр╕┤р╣Йр╕Щ!"
